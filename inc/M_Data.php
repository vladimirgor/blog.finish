<?phpclass M_Data {//// Articles list//public static function articles_all($start,$limit)    {        $db = M_Mysql::GetInstance();        return $articles = $db->Select        ("SELECT * FROM " . TABLE_ARTICLES . " ORDER BY id_article DESC" .             " LIMIT " . $limit .            " OFFSET " . $start );    }    //// Users list//    public static function users_all()    {        $db = M_Mysql::GetInstance();        return $users = $db->Select        ("SELECT * FROM " . TABLE_USERS . " ORDER BY id_user DESC" );    }//// Articles number count//public static function articles_count_all()    {        $db = M_Mysql::GetInstance();        $all = $db->Select         ("SELECT COUNT(*) FROM " . TABLE_ARTICLES);        return $all[0]['COUNT(*)'];           }  //// Articles page get//public static function searchPage( $pagesList, $needPage )    {        foreach( $pagesList as $chunk => $pages  ){            if( in_array($needPage, $pages) ){                return $chunk;            }        }        return 0;    }         //// Article get// public static function articles_get($id_article)    {        $db = M_Mysql::GetInstance();        return $article = $db->Select       ("SELECT * FROM " . TABLE_ARTICLES . " WHERE  id_article ='" . $id_article . "'");    }//    // Article comments get //   public static function articles_comments_get($id_article)    {        $db = M_Mysql::GetInstance();        $comments = $db->Select("SELECT * FROM " . TABLE_COMMENTS .             " WHERE  id_article ='" . $id_article . "'");        foreach ($comments as $key => $comment) {            $user = $db->Select("SELECT login FROM " . TABLE_USERS .             " WHERE  id_user ='" . $comment['id_user'] . "'");            $comments[$key]['login'] = $user[0]['login'];        }        return $comments;    }//// New article add//public  static function articles_new($title, $content, $image_path)    {        $db = M_Mysql::GetInstance();                $title = trim($title);        $content = trim($content);        $image_path = trim($image_path);           return $id = $db -> Insert(TABLE_ARTICLES,            ['title'=>$title, 'content'=>$content,'image_path'=> $image_path, 'date' => date('Y-m-d')]);    }    //// Article edit//public static function articles_edit($id_article, $title, $content, $image_path)    {        $db = M_Mysql::GetInstance();        $title = trim($title);        $content = trim($content);        $image_path = trim($image_path);        return $aff = $db -> Update(TABLE_ARTICLES,            ['title'=>$title, 'content'=>$content, 'image_path' => $image_path,],            "id_article ='" . $id_article . "'");    }//    // Article views number edit   // public static function articles_edit_views($id_article, $views)    {        $db = M_Mysql::GetInstance();        return $aff = $db -> Update(TABLE_ARTICLES,['views' => $views],            "id_article ='" . $id_article . "'");    }//    // Article comments number edit   //    public static function articles_edit_comments($id_article, $comments)    {        $db = M_Mysql::GetInstance();        return $aff = $db -> Update(TABLE_ARTICLES,['comments' => $comments],            "id_article ='" . $id_article . "'");    }//    // Article image path  //   public static function articles_image_path($id_article, $image_path)    {        $db = M_Mysql::GetInstance();        return $aff = $db -> Update(TABLE_ARTICLES,['image_path' => $image_path],            "id_article ='" . $id_article . "'");    }//// Article delete//public  static function  articles_delete($id_article)    {        $db = M_Mysql::GetInstance();        return $aff = $db -> Delete(TABLE_ARTICLES,"id_article ='" . $id_article . "'");    }//    // Comment delete   // public  static function  comment_delete($id_comment)    {        $db = M_Mysql::GetInstance();        return $aff = $db -> Delete(TABLE_COMMENTS,"id_comment ='" . $id_comment . "'");    }//    // Article comments delete //   public  static function  articles_comments_delete($id_article)    {        $db = M_Mysql::GetInstance();        return $aff = $db -> Delete(TABLE_COMMENTS,"id_article ='" . $id_article . "'");    }    //// Intro//public static function articles_intro($str, $len)    {        if (strlen($str['content']) > $len) {            $del = ['.',  '!', '?'];            for ($i = $len; $i < strlen($str['content']); $i++) {                if (in_array($str['content'][$i], $del) && $i >= $len) {                    $index = $i;                    break;                }            }            return substr($str['content'], 0, $index + 1);        } else return $str['content'];    } //// Comment add//    public static function articles_comment($id_article, $id_user, $comment)      {                $db = M_Mysql::GetInstance();        return $aff = $db -> Insert(TABLE_COMMENTS,['comment'=>$comment,            'id_article' => $id_article , 'id_user' => $id_user ]);    }  //    // Parameters extraction //        public static function extract_params($q)    {        $actions = ['Look','Edit','Delete','Comment','Image'];        $get = explode('/', $q);        $params['c'] = $get[0];        $params['a'] = $get[1];        if ( $get[1] == 'Show_all' && isset($get[2]) ){            $params['start'] = $get[2];        } else $params['start'] = 0;        if (  in_array($get[1], $actions) && isset($get[2]) )            {                $params['id'] = $get[2];            }        if (  in_array($get[1], $actions) && isset($get[3]) )                {                $params['start'] = $get[3];            }        if (  $get[0] == 'comment' && isset($get[3])){            $params['id_comment'] = $get[3];        }        if (  $get[0] == 'comment' && isset($get[4])){            $params['start'] = $get[4];        }        return $params;    }//    // image file upload    //        public static function Images_uploadFile($field,$dir)    {        if ( $dir == '' ) $str = ''; else $str = '/';        $UPLOAD_DIR = $dir . $str .'images';        if ( !empty($_FILES) ) {            if ( isset($_FILES[$field]) &&  0 == $_FILES[$field]['error'] ){                $newFileName = basename($_FILES[$field]['name']);                $res = move_uploaded_file(                    $_FILES[$field]['tmp_name'],                    $UPLOAD_DIR . '/' . $newFileName                );                return $newFileName;            }        }        return false;    }//    // Protocol write //       public static function prot_write($str)    {                if ( WRITE_PROT == 'yes' )               {                  $db = M_Mysql::GetInstance();                $db -> Insert(PROT,['record'=>$str]);            }    }}